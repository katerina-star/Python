"""
Задание 1.

Приведен код, который позволяет сохранить в
массиве индексы четных элементов другого массива

Сделайте замеры времени выполнения кода с помощью модуля timeit

Оптимизируйте, чтобы снизить время выполнения
Проведите повторные замеры

Добавьте аналитику: что вы сделали и почему!!!
Без аналитики задание считается не принятым

Добавьте
аналитику: что
вы
сделали
и
почему!!!
Без
аналитики
задание
считается
не
принятым
"""

from timeit import timeit


def func_1(nums):
    @ @-20, 3 + 21, 23 @ @


def func_1(nums):
    if nums[i] % 2 == 0:
        new_arr.append(i)


return new_arr

num_list = [el + 10 for el in range(1, 10000)]

# Провела замеры времени:
print(timeit('func_1(num_list)', globals=globals(), number=1000))


# Производится оптимизация решения:
def func_2(nums):
    return [el for el in nums if el % 2 == 0]


# Провела замеры времени:
print(timeit('func_2(num_list)', globals=globals(), number=1000))

'''
Оптимизировала функцию, сделала списковое включение, этот вариант
является более быстрым способом создания списка в Python.
